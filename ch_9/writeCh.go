package main

import (
	"fmt"
	"time"
)

func writeToChannel(c chan int, x int) {
	fmt.Println(x)
	// Записать значение x в канал c.
	// оператор c <- x блокирует выполнение остальной части функции writeToChannel(),
	// т.к. никто не читает то, что было записано в канал c.
	c <- x
	// Закрыть канал, тем самым, сделав невозможным дальнейшую запись в него.
	close(c)
	// Этот вывод никогда не будет выполнен, т.к. значение из канала не было прочитано.
	fmt.Println(x)
}

func main() {
	// Определение переменной канала. Создание канала.
	c := make(chan int)
	// Выполнить горутину, передав функции созданный канал и значение,
	// которе будет в него записано.
	go writeToChannel(c, 10)
	// Вызов time.Sleep(), чтобы функция writeToChannel успела выполниться.
	// Когда time.Sleep() завершает работу, программа заканчивает выполнение,
	// не ожидая завершения функции writeToChannel().
	time.Sleep(1 * time.Second)
}
